<Page
    x:Class="Indirect.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:flui="using:FluiFramework.UWP.Core"
    xmlns:local="using:Indirect" 
    xmlns:converters="using:Indirect.Converters"
    xmlns:wrapper="using:Indirect.Wrapper"
    xmlns:users="using:InstagramAPI.Classes.User" 
    xmlns:controls1="using:Indirect.Controls"
    xmlns:classes="using:InstagramAPI.Classes" 
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Controls/MasterDetailsViewStyle.xaml"/>
                <ResourceDictionary Source="Controls/ExtendedMasterDetailsView.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <converters:HasNewMessageStyleConverter x:Key="HasNewMessageStyleConverter"
                                                    NothingNew="{StaticResource NothingNew}"
                                                    HasNewMessage="{StaticResource HasNewMessage}"/>

            <Style x:Name="NothingNew" BasedOn="{StaticResource CaptionTextBlockStyle}" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource SystemBaseMediumColor}"/>
            </Style>
            <Style x:Name="HasNewMessage" BasedOn="{StaticResource CaptionTextBlockStyle}" TargetType="TextBlock">
                <Setter Property="FontWeight" Value="Bold"/>
            </Style>
            
            <converters:EqualityConverter x:Key="DisableWhenEqualZero" ReferenceValue="0" Invert="True"/>
            <converters:EqualityConverter x:Key="DisableWhenEqual32" ReferenceValue="32" Invert="True"/>
            <converters:VisibleWhenZeroConverter x:Key="VisibleWhenNotZeroConverter" Invert="True"/>
            <converters:BooleanVisibilityConverter x:Key="BooleanVisibilityConverter"/>
        </ResourceDictionary>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="32"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        
        <Popup x:Name="MediaPopup" IsOpen="False" Width="400" Height="200" Grid.Row="1" Canvas.ZIndex="5">
            <Grid Background="{ThemeResource SystemControlAcrylicElementBrush}" 
                  Width="{x:Bind MediaPopup.Width, Mode=OneWay}" 
                  Height="{x:Bind MediaPopup.Height, Mode=OneWay}">
                <Button Style="{x:Null}" Click="CloseMediaPopup_OnClick" VerticalAlignment="Top" HorizontalAlignment="Left" Canvas.ZIndex="1">
                    <Button.KeyboardAccelerators>
                        <KeyboardAccelerator Key="Escape"/>
                    </Button.KeyboardAccelerators>
                    <SymbolIcon Symbol="Cancel"/>
                </Button>
                <controls1:ImmersiveControl x:Name="ImmersiveControl" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
            </Grid>
        </Popup>

        <Grid x:Name="TitleBarElement" 
              Grid.Row="0"
              Background="Transparent" 
              Canvas.ZIndex="2">

            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="LeftPaddingColumn" Width="0"/>
                <ColumnDefinition/>
                <ColumnDefinition x:Name="RightPaddingColumn" Width="0"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="1" Orientation="Horizontal">
                <Button x:Name="BackButtonPlaceholder" Style="{StaticResource NavigationBackButtonNormalStyle}"
                        Height="32" Width="40" Opacity="0"
                        Visibility="Collapsed">
                </Button>
                <TextBlock x:Name="AppTitleTextBlock"
                           Text="Indirect" 
                           VerticalAlignment="Center"
                           Style="{ThemeResource FluentCaptionTextStyle}" 
                           Margin="13,0,0,0"/>
            </StackPanel>
        </Grid>

        <Button x:Name="BackButton" Grid.Row="0" Canvas.ZIndex="3"
                Style="{StaticResource NavigationBackButtonNormalStyle}"
                Height="32" Width="40"
                Click="DetailsBackButton_OnClick" Visibility="Collapsed">
        </Button>

        <controls1:ExtendedMasterDetailsView x:Name="MainLayout"
                                    Background="{ThemeResource MainBackground}"
                                    Grid.Row="0"
                                    Grid.RowSpan="2"
                                    BackButtonBehavior="Manual"
                                    ItemsSource="{x:Bind Inbox.Threads, Mode=OneWay}"
                                    SelectedItem="{x:Bind _viewModel.SelectedThread, Mode=TwoWay}"
                                    BorderBrush="Transparent"
                                    BorderThickness="0"
                                    MasterPaneBackground="{ThemeResource SystemControlAcrylicWindowBrush}"
                                    SelectionChanged="MainLayout_OnSelectionChanged"
                                    CompactModeThresholdWidth="{StaticResource IntermediateWindowWidth}">
            <controls1:ExtendedMasterDetailsView.MasterListHeader>
                <Grid x:Name="ReelsFeed" Visibility="{x:Bind _viewModel.ReelsFeed.Reels.Count, Converter={StaticResource VisibleWhenNotZeroConverter}, Mode=OneWay}" Margin="0,0,0,8">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Text="Stories" Style="{ThemeResource FluentTitleTextStyle}" FontSize="14" Margin="16,4,0,4" Tapped="StoriesSectionTitle_OnTapped"/>

                    <ListView Grid.Row="1" ItemsSource="{x:Bind _viewModel.ReelsFeed.Reels}" Canvas.ZIndex="1" VerticalAlignment="Stretch"
                              ScrollViewer.HorizontalScrollMode="Enabled" 
                              ScrollViewer.HorizontalScrollBarVisibility="Auto"
                              ScrollViewer.VerticalScrollMode="Disabled"
                              ScrollViewer.VerticalScrollBarVisibility="Hidden"
                              SelectionChanged="ReelsFeed_OnSelectionChanged">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="MinHeight" Value="0"/>
                                <Setter Property="MinWidth" Value="0"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <ItemsStackPanel Orientation="Horizontal" Margin="0" GroupPadding="0"></ItemsStackPanel>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="wrapper:ReelWrapper">
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,4,0,8">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="54"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <controls:ImageEx Grid.Row="0"
                                                      Source="{x:Bind User.ProfilePictureUrl}" 
                                                      Width="46" Height="46" CornerRadius="99" Margin="4"
                                                      HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <Border Grid.Row="0" Width="54" Height="54" BorderThickness="2" CornerRadius="99"
                                            Visibility="{x:Bind HasUnseenItems, Mode=OneWay, Converter={StaticResource BooleanVisibilityConverter}}">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
                                                <GradientStop Color="#962fbf" Offset="0"/>
                                                <GradientStop Color="#d62976" Offset="0.5"/>
                                                <GradientStop Color="#feda75" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                    </Border>
                                    <TextBlock Grid.Row="1" Text="{x:Bind User.Username}" 
                                               Style="{ThemeResource FluentCaptionTextStyle}" MaxWidth="54" HorizontalAlignment="Center"/>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
            </controls1:ExtendedMasterDetailsView.MasterListHeader>

            <controls1:ExtendedMasterDetailsView.NoSelectionContent>
                <StackPanel Grid.Row="2" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Image Source="Assets/NoSelectionGraphic.png" Width="160" Height="160" Opacity="0.8"/>
                    <TextBlock Text="Select a thread to start chatting" Margin="0,24,0,0"/>
                </StackPanel>
            </controls1:ExtendedMasterDetailsView.NoSelectionContent>

            <controls1:ExtendedMasterDetailsView.ItemTemplate>
                <DataTemplate x:DataType="wrapper:InstaDirectInboxThreadWrapper">
                    <StackPanel Orientation="Horizontal">
                        <controls1:ProfilePicture Source="{x:Bind Users}" Height="48" Width="48" Margin="4,8,16,8"/>
                        <StackPanel VerticalAlignment="Center">
                            <TextBlock Style="{ThemeResource FluentTitleTextStyle}" Text="{x:Bind Title}" MaxLines="1" HorizontalAlignment="Left" ScrollViewer.VerticalScrollBarVisibility="Disabled"/>
                            <TextBlock Style="{x:Bind HasUnreadMessage, Mode=OneWay, Converter={StaticResource HasNewMessageStyleConverter}}" 
                                       Text="{x:Bind LastPermanentItem.Description, Mode=OneWay}" MaxLines="1" 
                                       HorizontalAlignment="Left" ScrollViewer.VerticalScrollBarVisibility="Disabled"/>
                        </StackPanel>
                    </StackPanel>
                    
                </DataTemplate>
            </controls1:ExtendedMasterDetailsView.ItemTemplate>

            <controls1:ExtendedMasterDetailsView.DetailsTemplate>
                <DataTemplate x:DataType="wrapper:InstaDirectInboxThreadWrapper">
                    <controls1:ThreadDetailsView Thread="{x:Bind}"/>
                </DataTemplate>
            </controls1:ExtendedMasterDetailsView.DetailsTemplate>

            <controls1:ExtendedMasterDetailsView.MasterHeader>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="32"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Button x:Name="MasterMenuButton" Grid.Row="1" Grid.Column="0" Padding="6"
                            Margin="0,0,6,0" VerticalAlignment="Center" Background="Transparent">
                        <controls:ImageEx Source="{x:Bind _viewModel.LoggedInUser.ProfilePictureUrl, Mode=OneWay}" 
                                          Style="{ThemeResource ProfilePicturePlaceholderStyle}"
                                          CornerRadius="99" Height="32" Width="32" />
                        <Button.Flyout>
                            <MenuFlyout Placement="Bottom">
                                <MenuFlyoutItem Text="Profile" Click="Profile_Click"></MenuFlyoutItem>
                                <!--<ToggleMenuFlyoutItem Text="Pending inbox" IsChecked="False" Click="TogglePendingInbox_OnClick"
                                                      IsEnabled="{x:Bind _viewModel.Inbox.PendingRequestsCount, Converter={StaticResource DisableWhenEqualZero}, Mode=OneWay}"/>-->
                                <MenuFlyoutSeparator/>
                                <MenuFlyoutSubItem Text="Theme">
                                    <MenuFlyoutItem Text="System" Click="ThemeItem_Click"/>
                                    <MenuFlyoutItem Text="Dark" Click="ThemeItem_Click"/>
                                    <MenuFlyoutItem Text="Light" Click="ThemeItem_Click"/>
                                </MenuFlyoutSubItem>
                                <MenuFlyoutItem Text="About" Click="About_Click"/>
                                <MenuFlyoutSeparator/>
                                <MenuFlyoutItem Text="Logout" Click="LogoutButton_Click"/>
                            </MenuFlyout>
                        </Button.Flyout>
                    </Button>
                    <TextBlock x:Name="MasterHeading" Grid.Row="1" Grid.Column="1" Margin="0,-3,0,0"
                               Style="{ThemeResource FluentHeaderTextStyle}" Text="Direct" MaxLines="1" FontSize="30"
                               VerticalAlignment="Center"/>
                    <Button x:Name="NewMessageButton" Grid.Row="1" Grid.Column="2"
                            Background="Transparent"
                            Padding="6"
                            VerticalAlignment="Center"
                            ToolTipService.ToolTip="New message">
                        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE8FA;" Width="32" Height="32"/>
                        <Button.Flyout>
                            <Flyout x:Name="NewThreadFlyout" Placement="RightEdgeAlignedTop">
                                <Grid Width="240">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" Text="To:" Style="{ThemeResource FluentBaseTextStyle}" VerticalAlignment="Center"/>
                                    <Button Grid.Row="0" HorizontalAlignment="Right" Content="Chat"
                                            Style="{StaticResource AccentButtonStyle}"
                                            IsEnabled="{x:Bind _viewModel.NewMessageCandidates.Count, Converter={StaticResource DisableWhenEqualZero}, Mode=OneWay}"
                                            Click="ChatButton_OnClick"/>
                                    <AutoSuggestBox x:Name="NewMessageSuggestBox" Grid.Row="1" Margin="0,8,0,0"
                                                    TextChanged="NewMessageSuggestBox_OnTextChanged"
                                                    SuggestionChosen="NewMessageSuggestBox_OnSuggestionChosen"
                                                    QuerySubmitted="NewMessageSuggestBox_OnQuerySubmitted"
                                                    PlaceholderText="Search"
                                                    UpdateTextOnSelect="False"
                                                    QueryIcon="Find"
                                                    ProcessKeyboardAccelerators="NewMessageSuggestBox_OnProcessKeyboardAccelerators"
                                                    IsEnabled="{x:Bind _viewModel.NewMessageCandidates.Count, Converter={StaticResource DisableWhenEqual32}, Mode=OneWay}">
                                        <AutoSuggestBox.ItemTemplate>
                                            <DataTemplate x:DataType="users:BaseUser">
                                                <StackPanel Orientation="Horizontal">
                                                    <controls:ImageEx Source="{x:Bind ProfilePictureUrl}" Style="{ThemeResource ProfilePicturePlaceholderStyle}"
                                                                      CornerRadius="99" Height="28" Width="28" VerticalAlignment="Center"/>
                                                    <TextBlock Text="{x:Bind Username}" Margin="12,0,0,0" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </AutoSuggestBox.ItemTemplate>
                                    </AutoSuggestBox>
                                    <ListView x:Name="NewMessageCandidateList" Grid.Row="2"
                                              ItemsSource="{x:Bind _viewModel.NewMessageCandidates}" 
                                              SelectionMode="None" MaxHeight="400" Margin="0,8,0,4">
                                        <ListView.ItemTemplate>
                                            <DataTemplate x:DataType="users:BaseUser">
                                                <SwipeControl>
                                                    <SwipeControl.RightItems>
                                                        <SwipeItems Mode="Execute">
                                                            <SwipeItem Text="Clear" Background="Firebrick" Invoked="ClearSingleCandidateSwipe_OnInvoked">
                                                                <SwipeItem.IconSource>
                                                                    <SymbolIconSource Symbol="Clear"/>
                                                                </SwipeItem.IconSource>
                                                            </SwipeItem>
                                                        </SwipeItems>
                                                    </SwipeControl.RightItems>
                                                    <Grid HorizontalAlignment="Stretch" PointerEntered="Candidate_PointerEntered" PointerExited="Candidate_OnPointerExited" Background="Transparent">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <controls:ImageEx Grid.Column="0" Source="{x:Bind ProfilePictureUrl}" Style="{ThemeResource ProfilePicturePlaceholderStyle}"
                                                                          CornerRadius="99" Height="28" Width="28" VerticalAlignment="Center"/>
                                                        <TextBlock Grid.Column="1" Text="{x:Bind Username}" Margin="12,0,0,0" VerticalAlignment="Center"/>
                                                        <Button x:Name="ClearSingleCandidateButton" Grid.Column="2" Background="Transparent" Style="{StaticResource TextBlockButtonStyle}"
                                                                HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="Collapsed" Foreground="{StaticResource ButtonForegroundThemeBrush}"
                                                                Click="ClearSingleCandidateButton_OnClick" ToolTipService.ToolTip="Remove recipient">
                                                            <FontIcon Glyph="&#xE106;" FontSize="14"/>
                                                        </Button>
                                                    </Grid>
                                                </SwipeControl>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                        <ListView.ItemContainerStyle>
                                            <Style TargetType="ListViewItem">
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                            </Style>
                                        </ListView.ItemContainerStyle>
                                    </ListView>
                                    <StackPanel Grid.Row="3" Orientation="Horizontal" VerticalAlignment="Center" Margin="10,0,0,0">
                                        <TextBlock Text="{x:Bind _viewModel.NewMessageCandidates.Count, Mode=OneWay}" 
                                                   Style="{ThemeResource FluentCaptionTextStyle}"
                                                   Foreground="{StaticResource SystemControlForegroundBaseMediumBrush}"/>
                                        <TextBlock Text="recipient(s)" Margin="4,0,0,0" 
                                                   Style="{ThemeResource FluentCaptionTextStyle}"
                                                   Foreground="{StaticResource SystemControlForegroundBaseMediumBrush}"/>
                                    </StackPanel>
                                    <Button Grid.Row="3" HorizontalAlignment="Right" Style="{x:Null}"
                                            Background="Transparent" Click="NewMessageClearAll_OnClick" ToolTipService.ToolTip="Clear selection">
                                        <SymbolIcon Symbol="ClearSelection"/>
                                    </Button>
                                </Grid>
                            </Flyout>
                        </Button.Flyout>
                    </Button>

                    <AutoSuggestBox x:Name="SearchBox" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3"
                                    TextChanged="SearchBox_OnTextChanged"
                                    SuggestionChosen="SearchBox_OnSuggestionChosen"
                                    QuerySubmitted="SearchBox_OnQuerySubmitted"
                                    PlaceholderText="Search"
                                    UpdateTextOnSelect="False"
                                    QueryIcon="Find" Margin="0,4,0,8">
                        <AutoSuggestBox.ItemTemplate>
                            <DataTemplate x:DataType="wrapper:InstaDirectInboxThreadWrapper">
                                <StackPanel Orientation="Horizontal" Background="Transparent" Margin="0,4,0,4">
                                    <controls1:ProfilePicture Source="{x:Bind Users}" Height="28" Width="28" VerticalAlignment="Center"/>
                                    <TextBlock Text="{x:Bind Title}" MaxLines="1" Margin="12,0,0,0" VerticalAlignment="Center"/>
                                </StackPanel>
                            </DataTemplate>
                        </AutoSuggestBox.ItemTemplate>
                    </AutoSuggestBox>

                    
                </Grid>
            </controls1:ExtendedMasterDetailsView.MasterHeader>

        </controls1:ExtendedMasterDetailsView>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Compact">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource CompactWindowWidth}"/>
                    </VisualState.StateTriggers>
                </VisualState>

                <VisualState x:Name="Intermediate">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource IntermediateWindowWidth}"/>
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="NewMessageButton.Width" Value="56"/>
                        <Setter Target="NewMessageButton.Margin" Value="0,0,0,4"/>
                        <Setter Target="MainLayout.MasterPaneWidth" Value="80"/>
                        <Setter Target="MasterHeading.Visibility" Value="Collapsed"/>
                        <Setter Target="MasterMenuButton.Visibility" Value="Collapsed"/>
                        <Setter Target="SearchBox.Visibility" Value="Collapsed"/>
                        <Setter Target="ReelsFeed.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="Full">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource FullWindowWidth}"/>
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
